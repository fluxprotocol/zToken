{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x0eC78ED49C2D27b315D462d43B5BAB94d2C79bf8",
      "txHash": "0x7e297e8b730b70670c6c5133f2e54363bfe1982d467920fd62e2f6122ba00380",
      "kind": "transparent"
    }
  ],
  "impls": {
    "6d1712a411d10ccdbb23fbede750c38acdee8129c18e946a95c572077f99ba86": {
      "address": "0x8d52c3bac5FA670B8A1e8d370C00a086946C54bB",
      "txHash": "0x620b89a44c6da59cb709566af2494ceb7aa84da1f465bac6d750a3cb234f5de2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:74"
          },
          {
            "contract": "TokenVesting",
            "label": "vestingStart",
            "type": "t_uint256",
            "src": "contracts\\TokenVesting.sol:33"
          },
          {
            "contract": "TokenVesting",
            "label": "vestingCliff",
            "type": "t_uint256",
            "src": "contracts\\TokenVesting.sol:34"
          },
          {
            "contract": "TokenVesting",
            "label": "vestingDuration",
            "type": "t_uint256",
            "src": "contracts\\TokenVesting.sol:35"
          },
          {
            "contract": "TokenVesting",
            "label": "awards",
            "type": "t_mapping(t_address,t_struct(TokenAward)2034_storage)",
            "src": "contracts\\TokenVesting.sol:45"
          },
          {
            "contract": "TokenVesting",
            "label": "targetToken",
            "type": "t_contract(IERC20)954",
            "src": "contracts\\TokenVesting.sol:47"
          },
          {
            "contract": "MerkleDistributor",
            "label": "merkleRoot",
            "type": "t_bytes32",
            "src": "contracts\\MerkleDistributor.sol:7"
          },
          {
            "contract": "MerkleDistributor",
            "label": "claimedBitMap",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\MerkleDistributor.sol:10"
          }
        ],
        "types": {
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(TokenAward)2034_storage)": {
            "label": "mapping(address => struct TokenVesting.TokenAward)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(TokenAward)2034_storage": {
            "label": "struct TokenVesting.TokenAward",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "released",
                "type": "t_uint256"
              },
              {
                "label": "revocable",
                "type": "t_bool"
              },
              {
                "label": "revoked",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IERC20)954": {
            "label": "contract IERC20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ec211336a55925494fc46b128b2ce0ecf3779e93aff49a016f611d5ff418f19d": {
      "address": "0x2B680AF189a1Afc68C5Ce5451010766Cc5c895Fb",
      "txHash": "0x819483b086057a261feeba86fc1edcfa9ac0ec5824551b419533d2f5a9ffb0a1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:74"
          },
          {
            "contract": "TokenVesting",
            "label": "vestingStart",
            "type": "t_uint256",
            "src": "contracts\\TokenVesting.sol:33"
          },
          {
            "contract": "TokenVesting",
            "label": "vestingCliff",
            "type": "t_uint256",
            "src": "contracts\\TokenVesting.sol:34"
          },
          {
            "contract": "TokenVesting",
            "label": "vestingDuration",
            "type": "t_uint256",
            "src": "contracts\\TokenVesting.sol:35"
          },
          {
            "contract": "TokenVesting",
            "label": "awards",
            "type": "t_mapping(t_address,t_struct(TokenAward)2034_storage)",
            "src": "contracts\\TokenVesting.sol:45"
          },
          {
            "contract": "TokenVesting",
            "label": "targetToken",
            "type": "t_contract(IERC20)954",
            "src": "contracts\\TokenVesting.sol:47"
          },
          {
            "contract": "MerkleDistributor",
            "label": "merkleRoot",
            "type": "t_bytes32",
            "src": "contracts\\MerkleDistributor.sol:7"
          },
          {
            "contract": "MerkleDistributor",
            "label": "claimedBitMap",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts\\MerkleDistributor.sol:10"
          }
        ],
        "types": {
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(TokenAward)2034_storage)": {
            "label": "mapping(address => struct TokenVesting.TokenAward)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(TokenAward)2034_storage": {
            "label": "struct TokenVesting.TokenAward",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "released",
                "type": "t_uint256"
              },
              {
                "label": "revocable",
                "type": "t_bool"
              },
              {
                "label": "revoked",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IERC20)954": {
            "label": "contract IERC20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ce4272339ef9d2fd9053afea697bed1b1b8c47edaa1726c8e8734df05d3ec518": {
      "address": "0x8540aE9dc0A373d3EA418e2CfAAEaE09051d4093",
      "txHash": "0x1c63c9016d3ef6b174ff9ec546589584a608fffa3d1a8aae5e3e258d796ac321",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts\\oz\\ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts\\oz\\ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "contracts\\oz\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "contracts\\oz\\ERC20Upgradeable.sol:45"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "contracts\\oz\\ERC20Upgradeable.sol:46"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "contracts\\oz\\ERC20Upgradeable.sol:377"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC20PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\oz\\ERC20PausableUpgradeable.sol:46"
          },
          {
            "contract": "ERC20SnapshotUpgradeable",
            "label": "_accountBalanceSnapshots",
            "type": "t_mapping(t_address,t_struct(Snapshots)1415_storage)",
            "src": "contracts\\oz\\ERC20SnapshotUpgradeable.sol:55"
          },
          {
            "contract": "ERC20SnapshotUpgradeable",
            "label": "_totalSupplySnapshots",
            "type": "t_struct(Snapshots)1415_storage",
            "src": "contracts\\oz\\ERC20SnapshotUpgradeable.sol:56"
          },
          {
            "contract": "ERC20SnapshotUpgradeable",
            "label": "_currentSnapshotId",
            "type": "t_struct(Counter)748_storage",
            "src": "contracts\\oz\\ERC20SnapshotUpgradeable.sol:59"
          },
          {
            "contract": "ERC20SnapshotUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "contracts\\oz\\ERC20SnapshotUpgradeable.sol:214"
          },
          {
            "contract": "ZeroToken",
            "label": "authorizedToSnapshot",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts\\ZeroToken.sol:22"
          }
        ],
        "types": {
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(Snapshots)1415_storage)": {
            "label": "mapping(address => struct ERC20SnapshotUpgradeable.Snapshots)"
          },
          "t_struct(Snapshots)1415_storage": {
            "label": "struct ERC20SnapshotUpgradeable.Snapshots",
            "members": [
              {
                "label": "ids",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "values",
                "type": "t_array(t_uint256)dyn_storage"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Counter)748_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    }
  }
}
